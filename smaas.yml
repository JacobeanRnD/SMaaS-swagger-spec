# State Machines as a Service API
swagger: '2.0'
info:
  title: SMaaS
  description: State Machines as a Service API
  version: "1.0.0"
# the domain of the service
host: simulation.scxml.io
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /api/v3
produces:
  - application/json
  - application/xml
  - text/event-stream
paths:
  /:
    get:
      operationId : getStatechartDefinition
      summary: Get SCXML string
      produces:
        - application/scxml+xml
      responses:
        200:
          description: Got instance
    post:
      operationId : createInstance
      summary: Create an instance with random id
      produces:
        - application/json
      responses:
        201:
          description: Created a new instance with random id
          schema:
            $ref: '#/definitions/Message'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Message'
  /_all_instances:
    get:
      operationId : getInstances
      summary: Get list of all statechart instances
      produces:
        - application/json
      responses:
        201:
          description: Retrieved the list of instances successfully
          schema:
            $ref: '#/definitions/Message'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Message'
  /{InstanceId}:
    get:
      operationId : getInstance
      summary: Get information on all statechart instance, including current state
      produces:
        - application/json
      parameters:
        - name: InstanceId
          in: path
          description: Id or name of the instance
          required: true
          type: string   
      responses:
        201:
          description: Retrieved instance details successfully
          schema:
            $ref: '#/definitions/Message'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Message'
    put:
      operationId : createNamedInstance
      summary: Create an instance with given id
      produces:
        - application/json
      parameters:
        - name: InstanceId
          in: path
          description: Id or name of the instance
          required: true
          type: string 
      responses:
        201:
          description: Created a new instance with given device id
          schema:
            $ref: '#/definitions/Message'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Message'
    post:
      operationId : sendEvent
      summary: Send an event to the Statechart instance
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: InstanceId
          in: path
          description: Id or name of the instance
          required: true
          type: string 
        - name: Event
          in: body
          description: An event object
          required: true
          schema: 
            $ref: '#/definitions/Event'
      responses:
        200:
          description: Event sent successfully
          schema:
            $ref: '#/definitions/Message'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Message'
    delete:
      operationId : deleteInstance
      summary: Delete an existing Statechart instance
      produces:
        - application/json
      parameters:
        - name: InstanceId
          in: path
          description: Id or name of the instance
          required: true
          type: string 
      responses:
        200:
          description: Instance deleted successfully
          schema:
            $ref: '#/definitions/Message'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Message'
  /{InstanceId}/_changes:
    get:
      operationId : getInstanceChanges
      summary: Subscribe to instance Changes API
      produces:
        - text/event-stream
      parameters:
        - name: InstanceId
          in: path
          description: Id or name of the instance
          required: true
          type: string 
      responses:
        200:
          description: Started listening to changes successfully
          schema:
            $ref: '#/definitions/Message'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Message'
  /{InstanceId}/_eventLog:
    get:
      operationId : getEventLog
      summary: Get all list of events on an instance
      produces:
        - application/json
      parameters:
        - name: InstanceId
          in: path
          description: Id or name of the instance
          required: true
          type: string 
      responses:
        200:
          description: Retrieved event log successfully
          schema:
            $ref: '#/definitions/Message'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Message'
definitions:
  Message : 
    type : object
    properties : 
      name : 
        type : string
      data : 
        type : object
        properties : 
          data :
            type : object
          message : 
            type : string
  Event:
    type: object
    properties:
      name:
        type: string
      data:
        type: object
